name: Test and Deploy

# Run this workflow every time a new commit pushed to your repository
on: push

jobs:
  lint:
    name: Lint code base
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 12

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: npm install
        run: npm i
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Node ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
#      - uses: browser-actions/setup-chrome@latest
#      - run: chrome --version
      # Runs the Super-Linter action
#      - name: Run Super-Linter
#        uses: github/super-linter@v3
#        env:
#          VALIDATE_ALL_CODEBASE: false
#          DEFAULT_BRANCH: develop
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#          LINTER_RULES_PATH: /
#          CSS_FILE_NAME: .stylelintrc
#          VALIDATE_CSS: true
#          VALIDATE_JSX: true
#          VALIDATE_TSX: true
#          VALIDATE_TYPESCRIPT_ES: true
#          VALIDATE_TYPESCRIPT_STANDARD: true
      - name: ng install
        run: npm install -g @angular/cli

        # TEMPORARY DISABLED
#      - name: Angular linter
#        run: npm run lint
#      - name: Lint CSS
#        run: npm run lint-css
#      - name: Unit tests
#        run: ng test --watch=false --browsers=ChromeHeadlessNoSandbox --code-coverage=true
#      - name: E2E tests
#        run: node_modules/.bin/webdriver-manager update --versions.chrome=92 && CHROME_BIN=$(which chrome) ng e2e
        # TEMPORARY DISABLED
      - name: Export envirorment variables
        run: . ./deploy/build-env.github.sh
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.DEPLOY_BOT_SSH }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          #          config: ${{ secrets.CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - name: Build front
        run: bash build-front.sh
        shell: bash
        env:
          BRANCH: ${{ env.GITHUB_HEAD_REF }}
      - name: Deploy
        run: bash deploy.sh
        shell: bash
        env:
          BRANCH: ${{ env.GITHUB_HEAD_REF }}
